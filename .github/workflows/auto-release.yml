name: "Auto Release on Main"
on:
  push:
    branches:
      - "main"

jobs:
  auto-release:
    runs-on: "ubuntu-latest"
    permissions:
      contents: "write"
      pull-requests: "read"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0  # Fetch full history for commit counting

      - name: "Get commit count"
        id: commit_count
        run: |
          COUNT=$(git rev-list --count HEAD)
          echo "count=$COUNT" >> $GITHUB_OUTPUT
          echo "version=0.1.$COUNT" >> $GITHUB_OUTPUT

      - name: "Check if release exists"
        id: check_release
        run: |
          VERSION="0.1.${{ steps.commit_count.outputs.count }}"
          if gh release view "v$VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Generate release notes"
        id: release_notes
        if: steps.check_release.outputs.exists == 'false'
        run: |
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_MSG=$(git log -1 --pretty=format:"%s" $COMMIT_SHA)
          COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an" $COMMIT_SHA)
          
          cat << EOF > release_notes.md
          ## Automated Rolling Release v${{ steps.commit_count.outputs.version }}
          
          **Latest Commit:** $COMMIT_MSG
          **Author:** $COMMIT_AUTHOR
          **Commit:** [\`${COMMIT_SHA:0:7}\`](https://github.com/${{ github.repository }}/commit/$COMMIT_SHA)
          
          ### Usage
          
          To use this flake:
          \`\`\`bash
          # Use latest rolling release
          nix flake show github:${{ github.repository }}
          
          # Pin to this specific version
          nix flake show github:${{ github.repository }}/v${{ steps.commit_count.outputs.version }}
          \`\`\`
          
          ### Installation
          
          \`\`\`bash
          # Clone and install
          git clone https://github.com/${{ github.repository }}.git
          cd .dotfiles
          ./install.sh
          \`\`\`
          
          ---
          *This is an automated rolling release generated from the latest commit to main.*
          EOF

      - name: "Create Release"
        if: steps.check_release.outputs.exists == 'false'
        run: |
          gh release create "v${{ steps.commit_count.outputs.version }}" \
            --title "Rolling Release v${{ steps.commit_count.outputs.version }}" \
            --notes-file release_notes.md \
            --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
