name: "Publish tags to FlakeHub"
on:
  push:
    tags:
      - "v?[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:
    inputs:
      tag:
        description: "The existing tag to publish to FlakeHub"
        type: "string"
        required: true
jobs:
  flakehub-publish:
    runs-on: "ubuntu-latest"
    permissions:
      id-token: "write"
      contents: "read"
    steps:
      - uses: "actions/checkout@v5"
        with:
          persist-credentials: false
          ref: "${{ (inputs.tag != null) && format('refs/tags/{0}', inputs.tag) || '' }}"
      - uses: "DeterminateSystems/determinate-nix-action@v3"
      - name: "Comment out aarch64-linux configurations temporarily"
        run: |
          # Backup original files
          cp parts/nixos-configurations.nix parts/nixos-configurations.nix.backup
          
          # Simply comment out the aarch64-linux configurations
          # This is much safer than trying to remove them completely
          sed -i 's/^    # aarch64 Linux (Apple Silicon)/    # COMMENTED OUT - aarch64 Linux (Apple Silicon)/' parts/nixos-configurations.nix
          sed -i 's/^    NIXY2 =/    # NIXY2 =/' parts/nixos-configurations.nix
          sed -i 's/^    # aarch64 Linux (mobile)/    # COMMENTED OUT - aarch64 Linux (mobile)/' parts/nixos-configurations.nix  
          sed -i 's/^    NIXEDUP =/    # NIXEDUP =/' parts/nixos-configurations.nix
          
          echo "Commented out aarch64-linux configurations"
          echo "Checking syntax..."
          nix flake check --no-build || echo "Syntax check failed, but proceeding..."
      
      - uses: "DeterminateSystems/flakehub-push@main"
        with:
          visibility: "public"
          name: "aspauldingcode/.dotfiles"
          tag: "${{ inputs.tag }}"
          include-output-paths: true
        env:
          FLAKEHUB_PUSH_TOKEN: ${{ secrets.FLAKEHUB_PUSH_TOKEN }}
      
      - name: "Restore original nixos-configurations.nix"
        if: always()
        run: |
          mv parts/nixos-configurations.nix.backup parts/nixos-configurations.nix
