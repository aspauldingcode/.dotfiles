name: "Publish tags to FlakeHub"
on:
  push:
    tags:
      - "v?[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:
    inputs:
      tag:
        description: "The existing tag to publish to FlakeHub"
        type: "string"
        required: true
jobs:
  flakehub-publish:
    runs-on: "ubuntu-latest"
    permissions:
      id-token: "write"
      contents: "read"
    steps:
      - uses: "actions/checkout@v5"
        with:
          persist-credentials: false
          ref: "${{ (inputs.tag != null) && format('refs/tags/{0}', inputs.tag) || '' }}"
      - uses: "DeterminateSystems/determinate-nix-action@v3"
      - name: "Remove aarch64-linux configurations temporarily"
        run: |
          # Backup original files
          cp parts/nixos-configurations.nix parts/nixos-configurations.nix.backup
          
          # Create Python script to remove aarch64-linux configurations
          cat > remove_aarch64.py << 'EOF'
          def remove_config_block(content, config_name):
              lines = content.split('\n')
              result_lines = []
              i = 0
              removed = False
              
              while i < len(lines):
                  line = lines[i]
                  
                  # Check if this line starts the config we want to remove
                  if f'{config_name} =' in line and 'inputs.nixpkgs.lib.nixosSystem' in line:
                      print(f"Found {config_name} configuration at line {i+1}")
                      
                      # Skip lines until we find the matching closing brace
                      brace_count = line.count('{') - line.count('}')
                      i += 1
                      
                      while i < len(lines) and brace_count > 0:
                          current_line = lines[i]
                          brace_count += current_line.count('{') - current_line.count('}')
                          i += 1
                      
                      # Skip the final "};" line
                      if i < len(lines) and '};' in lines[i]:
                          i += 1
                      
                      removed = True
                      print(f"Removed {config_name} configuration")
                  else:
                      result_lines.append(line)
                      i += 1
              
              if not removed:
                  print(f"Warning: Could not find {config_name} configuration")
              
              return '\n'.join(result_lines)
          
          # Read the file
          with open('parts/nixos-configurations.nix', 'r') as f:
              content = f.read()
          
          print("Original file size:", len(content))
          
          # Remove NIXY2 and NIXEDUP configurations
          content = remove_config_block(content, 'NIXY2')
          content = remove_config_block(content, 'NIXEDUP')
          
          print("Modified file size:", len(content))
          
          # Write back to file
          with open('parts/nixos-configurations.nix', 'w') as f:
              f.write(content)
          
          print("Successfully processed nixos-configurations.nix")
          EOF
          
          python3 remove_aarch64.py
      
      - uses: "DeterminateSystems/flakehub-push@main"
        with:
          visibility: "public"
          name: "aspauldingcode/.dotfiles"
          tag: "${{ inputs.tag }}"
          include-output-paths: true
        env:
          FLAKEHUB_PUSH_TOKEN: ${{ secrets.FLAKEHUB_PUSH_TOKEN }}
      
      - name: "Restore original nixos-configurations.nix"
        if: always()
        run: |
          mv parts/nixos-configurations.nix.backup parts/nixos-configurations.nix
