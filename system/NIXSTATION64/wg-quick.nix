{ pkgs, ... }:

# wg-quick - wireguard vpn to access my homeserver from school.
{
  
  environment.systemPackages = with pkgs; [ wireguard-tools ];

  #networking.wg-quick.interfaces = {
  #  NIXSTATION64 = { # name of the interface
  #    address = [ # The IP addresses of the interface.
  #     "192.168.1.21/24"
  #  ];
  #  peers = [ # Peers linked to the interface.
  #    {
  #      allowedIPs = [
  #        "192.168.1.34/24"
  #      ];
  #      endpoint = "demo.wireguard.io:12913";
  #      publicKey = "xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg=";
     # }
    #];
    #  privateKeyFile = "/private/wireguard_key"; # Private key file as generated by wg genkey.
   #   table = null; # The kernel routing table to add this interfaceâ€™s associated routes to. 
    #  preUp = ""; # Commands called at the start of the interface setup.
     # preDown = ""; # Commands called before the interface is taken down.
    #  postUp = ""; # Commands called after the interface setup
   #   postDown = ""; # Commands called after the interface is taken down.
      # peers.*.publicKey = ""; # The base64 public key to the peer.
      # peers.*.presharedKeyFile = ""; # File pointing to preshared key as generated by wg genpsk
      # peers.*.persistentKeepalive = null; # in seconds from 1 to 65535 how often
      #to send an authenticated empty packet to the peer
      # peers.*.endpoint = ""; # Endpoint IP or hostname of the peer, followed by a colon, and then a port number of the peer.
    #  mtu = 1500; # the MTU is automatically determined from the endpoint addresses or the system default route
   #   listenPort = "51280"; # 16-bit port for listening. Optional; if not specified, automatically generated based on interface name.
  #    dns = # The IP addresses of DNS servers to configure. 
  #    [ 
      #    "192.168.1.1"
  #    ];       autostart = true;
  #          
 #   };
#  };
}

# NIXSTATION local ip:
# 192.168.1.21/24

# NIXY local ip:
# 192.168.1.34/24

# NIXEDUP local ip:

# 8AMPS 
